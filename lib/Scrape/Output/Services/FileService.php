<?php
/**
 * THIS CODE WAS GENERATED BY AN AUTOMATED TOOL. Editing it is not recommended.
 * For more information, see http://github.com/elliotboney/
 *
 * Generated on: 04/09/2014 @ 15:12:44
 *
 * MIT License
 * ===========
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 * @category  Services
 * @package   FileService
 * @author    Elliot Boney <elliotboney@gmail.com>
 * @copyright 1997-2013 Digital Grove, LLC
 * @license   MIT License (http://www.opensource.org/licenses/mit-license.php)
 * @version   [0.0.1]
 * @link      http://help.infusionsoft.com/developers/services/FileService
 */

namespace iSDK\Services;

/**
 * FileService Service Class
 *
 * FileService [short description]
 *
 * @category Services
 * @package  FileService
 * @author   Elliot Boney <elliotboney@gmail.com>
 * @license  MIT License (http://www.opensource.org/licenses/mit-license.php)
 * @link     http://help.infusionsoft.com//api-docs/fileservice
 */
class FileService
{
    /**
     * This method retrieves the file data for the given ID number.
     *
     * @param int $FileId The ID of the file you would like to return.
     *
     * @return stuff
     */
    function getFile($FileId)
    {
        $parray = array(
            php_xmlrpc_encode((int)$FileId));
    }

    /**
     * This method will return a string of the download URL for the given file.
     *
     * @param int $FileId The ID of the file url to be returned.
     *
     * @return stuff
     */
    function getDownloadUrl($FileId)
    {
        $parray = array(
            php_xmlrpc_encode((int)$FileId));
    }

    /**
     * This method uploads the file to Infusionsoft. The optional contactId parameter is used to
     * place the file in a specific contact&#39;s filebox.
     *
     * @param string $FileName             The name of the file to be uploaded
     * @param string $Base64EncodedData    A string that is 64 base encoded.
     * @param int    $ContactId (optional) ID of the contact record to add the file to.
     *
     * @return stuff
     */
    function uploadFile($FileName, $Base64EncodedData, $ContactId (optional))
    {
        $parray = array(
            php_xmlrpc_encode($FileName),
            php_xmlrpc_encode($Base64EncodedData),
            php_xmlrpc_encode((int)$ContactId (optional)));
    }

    /**
     * This method will return a string of the download URL for the given file.
     *
     * @param int    $FileId            ID of the file to be replaced.
     * @param string $Base64EncodedData New string of data.
     *
     * @return stuff
     */
    function replaceFile($FileId, $Base64EncodedData)
    {
        $parray = array(
            php_xmlrpc_encode((int)$FileId),
            php_xmlrpc_encode($Base64EncodedData));
    }

    /**
     * This method will return a string of the download URL for the given file.
     *
     * @param int    $FileId   Id of the file to be renamed.
     * @param string $fileName New string of data.
     *
     * @return stuff
     */
    function renameFile($FileId, $fileName)
    {
        $parray = array(
            php_xmlrpc_encode((int)$FileId),
            php_xmlrpc_encode($fileName));
    }

}
?>
